{"uid":"fa98ad2de452a477","name":"Test03: Verify Sending Email to Parabank Support","fullName":"tests_cases.test_web.TestWeb#test_verify_sending_email_to_support","historyId":"6fbcbfea8a4bc77728e7d5895fd7c78b","time":{"start":1734707649862,"stop":1734707651882,"duration":2020},"description":"This test verifies that an email successfully sent to Parabank customer support.","descriptionHtml":"<p>This test verifies that an email successfully sent to Parabank customer support.</p>\n","status":"failed","statusMessage":"AssertionError: Verify equals failed, actual result:Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.","statusTrace":"self = <tests_cases.test_web.TestWeb object at 0x0000023F4B7835C0>\n\n    @allure.title('Test03: Verify Sending Email to Parabank Support')\n    @allure.description('This test verifies that an email successfully sent to Parabank customer support.')\n    def test_verify_sending_email_to_support(self):\n        # Define the contact details for sending an email\n        name = \"Nir\"\n        email = \"nirtest@gmail.com\"\n        phone = \"0546900242\"\n        message = \"Hello there\"\n        # Navigate to the contact page on Parabank\n        WebFlows.navigate_contact_page_parabank()\n        # Send an email to customer care with the provided details\n        WebFlows.send_email_to_customer_care_parabank(name, email, phone, message)\n        # Expected confirmation message after sending the email\n        expected_text = f\"Customer Care\\nThank you {name}\\nA Customer Care Representative will not be contacting you.\"\n        # Verify that the email confirmation message is displayed correctly\n>       WebFlows.verify_email_sent_parabank(expected_text)\n\ntests_cases\\test_web.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flows.py:54: in verify_email_sent_parabank\n    Verifications.verify_equals(actual, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'Customer Care\\nThank you Nir\\nA Customer Care Representative will be contacting you.'\nexpected = 'Customer Care\\nThank you Nir\\nA Customer Care Representative will not be contacting you.'\n\n    @staticmethod\n    @allure.step('Verify that actual value \"{actual}\" equals expected value \"{expected}\"')\n    def verify_equals(actual, expected):\n        print(f'actual is {actual}')\n        print(f'expected is {expected}')\n>       assert actual == expected, f'Verify equals failed, actual result:{actual} is not equal to expected:{expected}'\nE       AssertionError: Verify equals failed, actual result:Customer Care\nE       Thank you Nir\nE       A Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nE       Thank you Nir\nE       A Customer Care Representative will not be contacting you.\n\nextensions\\verification.py:13: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_web_driver","time":{"start":1734707624564,"stop":1734707645898,"duration":21334},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_xunit_setup_method_fixture_TestWeb","time":{"start":1734707649861,"stop":1734707649862,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"This test verifies that an email successfully sent to Parabank customer support.","status":"failed","statusMessage":"AssertionError: Verify equals failed, actual result:Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.","statusTrace":"self = <tests_cases.test_web.TestWeb object at 0x0000023F4B7835C0>\n\n    @allure.title('Test03: Verify Sending Email to Parabank Support')\n    @allure.description('This test verifies that an email successfully sent to Parabank customer support.')\n    def test_verify_sending_email_to_support(self):\n        # Define the contact details for sending an email\n        name = \"Nir\"\n        email = \"nirtest@gmail.com\"\n        phone = \"0546900242\"\n        message = \"Hello there\"\n        # Navigate to the contact page on Parabank\n        WebFlows.navigate_contact_page_parabank()\n        # Send an email to customer care with the provided details\n        WebFlows.send_email_to_customer_care_parabank(name, email, phone, message)\n        # Expected confirmation message after sending the email\n        expected_text = f\"Customer Care\\nThank you {name}\\nA Customer Care Representative will not be contacting you.\"\n        # Verify that the email confirmation message is displayed correctly\n>       WebFlows.verify_email_sent_parabank(expected_text)\n\ntests_cases\\test_web.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flows.py:54: in verify_email_sent_parabank\n    Verifications.verify_equals(actual, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'Customer Care\\nThank you Nir\\nA Customer Care Representative will be contacting you.'\nexpected = 'Customer Care\\nThank you Nir\\nA Customer Care Representative will not be contacting you.'\n\n    @staticmethod\n    @allure.step('Verify that actual value \"{actual}\" equals expected value \"{expected}\"')\n    def verify_equals(actual, expected):\n        print(f'actual is {actual}')\n        print(f'expected is {expected}')\n>       assert actual == expected, f'Verify equals failed, actual result:{actual} is not equal to expected:{expected}'\nE       AssertionError: Verify equals failed, actual result:Customer Care\nE       Thank you Nir\nE       A Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nE       Thank you Nir\nE       A Customer Care Representative will not be contacting you.\n\nextensions\\verification.py:13: AssertionError","steps":[{"name":"Navigate to the Contact page on Parabank","time":{"start":1734707649864,"stop":1734707650671,"duration":807},"status":"passed","steps":[{"name":"Click on element","time":{"start":1734707649927,"stop":1734707650671,"duration":744},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.E0BF108114EA09B3231A08D55263B194.e.160\")>"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Send email to Parabank Customer Care","time":{"start":1734707650672,"stop":1734707651674,"duration":1002},"status":"passed","steps":[{"name":"Update text of element with value \"'Nir'\"","time":{"start":1734707650698,"stop":1734707650818,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.697090BE086E0E4C4639E843336F9B71.e.180\")>"},{"name":"text","value":"'Nir'"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Update text of element with value \"'nirtest@gmail.com'\"","time":{"start":1734707650838,"stop":1734707651007,"duration":169},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.697090BE086E0E4C4639E843336F9B71.e.182\")>"},{"name":"text","value":"'nirtest@gmail.com'"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Update text of element with value \"'0546900242'\"","time":{"start":1734707651024,"stop":1734707651143,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.697090BE086E0E4C4639E843336F9B71.e.183\")>"},{"name":"text","value":"'0546900242'"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Update text of element with value \"'Hello there'\"","time":{"start":1734707651160,"stop":1734707651253,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.697090BE086E0E4C4639E843336F9B71.e.184\")>"},{"name":"text","value":"'Hello there'"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on element","time":{"start":1734707651269,"stop":1734707651674,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"860e98ffa79230b0aa59de3a028a67a6\", element=\"f.51E9EB9906565AC8A75AFF8A290E7A29.d.697090BE086E0E4C4639E843336F9B71.e.188\")>"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[{"name":"name","value":"'Nir'"},{"name":"email","value":"'nirtest@gmail.com'"},{"name":"phone","value":"'0546900242'"},{"name":"message","value":"'Hello there'"}],"stepsCount":5,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Verify email sent confirmation message on Parabank","time":{"start":1734707651674,"stop":1734707651857,"duration":183},"status":"failed","statusMessage":"AssertionError: Verify equals failed, actual result:Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.\n","statusTrace":"  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\workflows\\web_flows.py\", line 54, in verify_email_sent_parabank\n    Verifications.verify_equals(actual, expected)\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\extensions\\verification.py\", line 13, in verify_equals\n    assert actual == expected, f'Verify equals failed, actual result:{actual} is not equal to expected:{expected}'\n","steps":[{"name":"Verify that actual value \"'Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you.'\" equals expected value \"'Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.'\"","time":{"start":1734707651771,"stop":1734707651771,"duration":0},"status":"failed","statusMessage":"AssertionError: Verify equals failed, actual result:Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you. is not equal to expected:Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.\n","statusTrace":"  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\extensions\\verification.py\", line 13, in verify_equals\n    assert actual == expected, f'Verify equals failed, actual result:{actual} is not equal to expected:{expected}'\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"'Customer Care\nThank you Nir\nA Customer Care Representative will be contacting you.'"},{"name":"expected","value":"'Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.'"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[{"name":"expected","value":"'Customer Care\nThank you Nir\nA Customer Care Representative will not be contacting you.'"}],"stepsCount":1,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[{"uid":"8acac9f8e0500226","name":"7f584f61-d07f-498f-9642-9fb5ba46e4df-attachment.png","source":"8acac9f8e0500226.png","type":"image/png","size":99122}],"parameters":[],"stepsCount":10,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestWeb::0","time":{"start":1734707652390,"stop":1734707653006,"duration":616},"status":"passed","steps":[{"name":"Navigate to the Parabank home page","time":{"start":1734707652390,"stop":1734707653006,"duration":616},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"init_web_driver::0","time":{"start":1734707659083,"stop":1734707663503,"duration":4420},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_web_driver')"},{"name":"parentSuite","value":"tests_cases"},{"name":"suite","value":"test_web"},{"name":"subSuite","value":"TestWeb"},{"name":"host","value":"DESKTOP-DHGB96Q"},{"name":"thread","value":"72-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_cases.test_web"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_web_driver')"]},"source":"fa98ad2de452a477.json","parameterValues":[]}