{"uuid": "cdf79b55-2a50-49b2-a48f-deaf98998245", "children": ["ec6f83de-529a-4d88-8a22-a59021071574"], "befores": [{"name": "init_mobile_driver", "status": "broken", "statusDetails": {"message": "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=4723): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x000001BD89504950>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\n", "trace": "  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1122, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 877, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\tests_cases\\conftest.py\", line 50, in init_mobile_driver\n    edriver = get_mobile_driver()\n              ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\tests_cases\\conftest.py\", line 68, in get_mobile_driver\n    driver = get_android(get_data(\"Udid\"))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\tests_cases\\conftest.py\", line 127, in get_android\n    android_driver = appium.webdriver.Remote(get_data('Appium_Server'), dc)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 267, in __init__\n    super().__init__(\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 357, in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 319, in execute\n    response = self.command_executor.execute(driver_command, params)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 374, in execute\n    return self._request(command_info[0], url, body=data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 397, in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\request.py\", line 78, in request\n    return self.request_encode_body(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\request.py\", line 170, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\poolmanager.py\", line 376, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 826, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 826, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 826, in urlopen\n    return self.urlopen(\n           ^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 798, in urlopen\n    retries = retries.increment(\n              ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Projects\\selenium3-python\\.venv\\Lib\\site-packages\\urllib3\\util\\retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n"}, "start": 1728024347403, "stop": 1728024366044}], "start": 1728024347403, "stop": 1728024366810}